definitions:
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.FullPlayerStatInfo:
    properties:
      assists:
        type: integer
      fantasyPoint:
        type: number
      gameDate:
        type: string
      goals:
        type: integer
      hits:
        type: integer
      missedGoals:
        type: integer
      name:
        type: string
      opponent:
        type: string
      photo:
        type: string
      pims:
        type: integer
      playerID:
        type: integer
      position:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.Position'
      positionName:
        type: string
      rarity:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_store.CardRarity'
      rarityName:
        type: string
      saves:
        type: integer
      shots:
        type: integer
      shutout:
        type: boolean
      teamLogo:
        type: string
      teamName:
        type: string
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.PlayerCardResponse:
    properties:
      bonusMetric:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_store.BonusMetric'
      bonusMetricName:
        type: string
      id:
        type: integer
      league:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.League'
      leagueName:
        type: string
      multiply:
        type: number
      name:
        type: string
      photo:
        type: string
      playerID:
        type: integer
      position:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.Position'
      positionName:
        type: string
      profileID:
        type: string
      rarity:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_store.CardRarity'
      rarityName:
        type: string
      sweaterNumber:
        type: integer
      teamID:
        type: integer
      teamLogo:
        type: string
      teamName:
        type: string
      unpacked:
        type: boolean
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.PlayerResponse:
    properties:
      avgFantasyPoints:
        type: number
      cardRarity:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_store.CardRarity'
      id:
        type: integer
      league:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.League'
      leagueName:
        type: string
      name:
        type: string
      photo:
        type: string
      playerCost:
        type: number
      position:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.Position'
      positionName:
        type: string
      rarityName:
        default: Default
        type: string
      sweaterNumber:
        type: integer
      teamID:
        type: integer
      teamLogo:
        type: string
      teamName:
        type: string
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.PlayersStatisticDB:
    properties:
      assists:
        type: integer
      fantasyPoint:
        type: number
      gameDate:
        type: string
      goals:
        type: integer
      hits:
        type: integer
      league:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.League'
      matchIdLocal:
        type: integer
      missedGoals:
        type: integer
      opponent:
        type: string
      pims:
        type: integer
      playerIdNhl:
        type: integer
      saves:
        type: integer
      shots:
        type: integer
      shutout:
        type: boolean
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.Position:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - ErrPlayerPosition
    - Goalie
    - Defensemen
    - Forward
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.PositionData:
    properties:
      positionAbbrev:
        type: string
      positionName:
        type: string
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.TeamData:
    properties:
      teamAbbrev:
        type: string
      teamID:
        type: integer
      teamName:
        type: string
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.TournamentResults:
    properties:
      coins:
        type: integer
      fantasyPoints:
        type: number
      nickname:
        type: string
      place:
        type: integer
      profileID:
        type: string
      userPhoto:
        type: string
      userTeam:
        items:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.FullPlayerStatInfo'
        type: array
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.TournamentRosterResponse:
    properties:
      players:
        items:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.PlayerResponse'
        type: array
      positions:
        items:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.PositionData'
        type: array
      teams:
        items:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.TeamData'
        type: array
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.UserTeamResponse:
    properties:
      balance:
        type: number
      players:
        items:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.PlayerResponse'
        type: array
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_store.BonusMetric:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - ErrPlayerMetric
    - GoalieMetric
    - DefensemenMetric
    - ForwardMetric
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_store.CardRarity:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - ErrCardRarity
    - Silver
    - Gold
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_store.Product:
    properties:
      id:
        type: integer
      league:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.League'
      leagueName:
        type: string
      photoLink:
        type: string
      playerCardsCount:
        type: integer
      price:
        type: integer
      productName:
        type: string
      rarity:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_store.CardRarity'
      rarityName:
        type: string
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.GetTournamentsTotalInfo:
    properties:
      awayScore:
        type: integer
      awayTeamAbbrev:
        type: string
      awayTeamId:
        type: integer
      endAt:
        type: integer
      eventId:
        type: integer
      homeScore:
        type: integer
      homeTeamId:
        type: integer
      homeTemeAbrev:
        type: string
      league:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.League'
      matchId:
        type: integer
      startAt:
        type: integer
      statusEvent:
        type: string
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.League:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - ErrLeague
    - NHL
    - KHL
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.Matches:
    properties:
      awayScore:
        type: integer
      awayTeamId:
        type: integer
      endAt:
        type: integer
      eventId:
        type: integer
      homeScore:
        type: integer
      homeTeamId:
        type: integer
      league:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.League'
      matchId:
        type: integer
      startAt:
        type: integer
      statusEvent:
        type: string
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.Tournament:
    properties:
      deposit:
        type: integer
      league:
        $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.League'
      matchesIds:
        items:
          type: integer
        type: array
      playersAmount:
        type: integer
      prizeFond:
        type: integer
      statusParticipation:
        type: string
      statusTournament:
        type: string
      timeEnd:
        type: integer
      timeEndTS:
        type: string
      timeStart:
        type: integer
      timeStartTS:
        type: string
      title:
        type: string
      tournamentId:
        type: integer
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.UserTeamInput:
    properties:
      team:
        items:
          type: integer
        type: array
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.ChangePasswordInput:
    properties:
      newPassword:
        maxLength: 64
        minLength: 8
        type: string
      oldPassword:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - newPassword
    - oldPassword
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.CoinTransactionsModel:
    properties:
      amount:
        type: integer
      id:
        type: integer
      profileID:
        type: string
      status:
        type: string
      transactionDate:
        type: string
      transactionDetails:
        type: string
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.EmailInput:
    properties:
      email:
        maxLength: 64
        type: string
    required:
    - email
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.RefreshInput:
    properties:
      refreshToken:
        maxLength: 64
        minLength: 64
        type: string
    required:
    - refreshToken
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.ResetPasswordInput:
    properties:
      hash:
        maxLength: 32
        minLength: 32
        type: string
      newPassword:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - hash
    - newPassword
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.SignInInput:
    properties:
      email:
        maxLength: 64
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.SignUpInput:
    properties:
      code:
        type: integer
      email:
        maxLength: 64
        type: string
      nickname:
        maxLength: 64
        minLength: 4
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - code
    - email
    - nickname
    - password
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.Tokens:
    properties:
      accessToken:
        type: string
      expiresIn:
        type: integer
      refreshToken:
        type: string
    type: object
  github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.UserInfoModel:
    properties:
      coins:
        type: integer
      dateRegistration:
        type: string
      email:
        type: string
      nickname:
        type: string
      photoLink:
        type: string
      profileID:
        type: string
    type: object
  pkg_api.Error:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  pkg_api.StatusResponse:
    properties:
      status:
        type: string
    type: object
info:
  contact: {}
  title: fantasy api doc
paths:
  /auth/email/send-code:
    post:
      consumes:
      - application/json
      description: Отправка письма с кодом для подтверждения email пользователя
      parameters:
      - description: Входные параметры
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.EmailInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Отправка кода подтверждения
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Выход пользователя из системы
      parameters:
      - description: Входные параметры
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.RefreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Выход из системы
      tags:
      - auth
  /auth/refresh-tokens:
    post:
      consumes:
      - application/json
      description: Обновление access и refresh токенов
      parameters:
      - description: Входные параметры
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.RefreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Обновление токенов
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя в системе
      parameters:
      - description: Входные параметры
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Авторизация
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя в системе
      parameters:
      - description: Входные параметры
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.SignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Регистрация
      tags:
      - auth
  /players:
    get:
      consumes:
      - application/json
      description: Получение списка игроков
      parameters:
      - description: profileID
        in: query
        name: profileID
        type: string
      - description: players
        in: query
        name: id
        type: array
      - description: teams
        in: query
        name: teams
        type: array
      - description: position
        enum:
        - G
        - D
        - F
        in: query
        name: position
        type: string
      - description: league
        enum:
        - NHL
        - KHL
        in: query
        name: league
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.PlayerResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Получение списка игроков
      tags:
      - players
  /players/cards:
    get:
      consumes:
      - application/json
      description: Получение списка карточек игроков
      parameters:
      - description: profileID
        in: query
        name: profileID
        type: string
      - description: rarity
        enum:
        - Silver
        - Gold
        in: query
        name: rarity
        type: string
      - description: league
        enum:
        - NHL
        - KHL
        in: query
        name: league
        type: string
      - description: unpacked
        in: query
        name: unpacked
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.PlayerCardResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Получение списка карточек игроков
      tags:
      - players
  /players/cards/unpack:
    post:
      consumes:
      - application/json
      description: Распаковка карточки игрока
      parameters:
      - description: id карточки
        example: 1
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Распаковка карточки игрока
      tags:
      - players
  /players/khl/create:
    post:
      consumes:
      - application/json
      description: Добавление игроков КХЛ в базу данных
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Добавление игроков КХЛ
      tags:
      - players
  /players/nhl/create:
    post:
      consumes:
      - application/json
      description: Добавление игроков НХЛ в базу данных
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Добавление игроков НХЛ
      tags:
      - players
  /players/statistic_player/{player_id}:
    get:
      consumes:
      - application/json
      description: Возвращается все поля статистики за всё время
      parameters:
      - description: id игрока
        in: path
        name: player_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.PlayersStatisticDB'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение полной статистики по id игрока
      tags:
      - players
  /store/products:
    get:
      consumes:
      - application/json
      description: Получение списка товаров из fantasy магазина
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_store.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Получение товаров из fantasy магазина
      tags:
      - store
  /store/products/buy:
    post:
      consumes:
      - application/json
      description: Покупка товара в магазине по id товара
      parameters:
      - description: id товара
        example: 1
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Покупка товара в магазине
      tags:
      - store
  /tournament/create_team_khl:
    get:
      description: Добавлят информацию о команде KHL
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Создание команд KHL
      tags:
      - tournament
  /tournament/create_team_nhl:
    get:
      description: Добавлят информацию о команде NHL
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Создание команд NHL
      tags:
      - tournament
  /tournament/get_matches/{league}:
    get:
      description: Дата берётся автоматически
      parameters:
      - description: league
        enum:
        - NHL
        - KHL
        in: path
        name: league
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.Matches'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Получение матчей на следующий день
      tags:
      - tournament
  /tournament/get_tournaments/{league}:
    get:
      consumes:
      - application/json
      description: Дата берётся автоматически
      parameters:
      - description: league
        enum:
        - NHL
        - KHL
        - Both
        in: path
        name: league
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.Tournament'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение турниров на ближайшие 2 дня
      tags:
      - tournament
  /tournament/matches_by_tournament_id/{tournament_id}:
    get:
      consumes:
      - application/json
      description: Возвращается вся необходимая информация о матчах
      parameters:
      - description: id турнира
        in: path
        name: tournament_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.GetTournamentsTotalInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение матчей по id турнира
      tags:
      - tournament
  /tournament/results:
    get:
      consumes:
      - application/json
      description: Получение результатов турнира
      parameters:
      - description: tournamentID
        in: query
        name: tournamentID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.TournamentResults'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение результатов турнира
      tags:
      - tournament
  /tournament/roster:
    get:
      consumes:
      - application/json
      description: Получение составов на турнир
      parameters:
      - description: tournamentID
        in: query
        name: tournamentID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.TournamentRosterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение составов на турнир
      tags:
      - tournament
  /tournament/team:
    get:
      consumes:
      - application/json
      description: Получение команды пользователя в турнире
      parameters:
      - description: tournamentID
        in: query
        name: tournamentID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_players.UserTeamResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение команды пользователя в турнире
      tags:
      - tournament
  /tournament/team/create:
    post:
      consumes:
      - application/json
      description: Создание команды пользователя в турнире
      parameters:
      - description: tournamentID
        in: query
        name: tournamentID
        required: true
        type: integer
      - description: Входные параметры
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.UserTeamInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Создание команды пользователя в турнире
      tags:
      - tournament
  /tournament/team/edit:
    put:
      consumes:
      - application/json
      description: Редактирование команды пользователя в турнире
      parameters:
      - description: tournamentID
        in: query
        name: tournamentID
        required: true
        type: integer
      - description: Входные параметры
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.UserTeamInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Редактирование команды пользователя в турнире
      tags:
      - tournament
  /tournaments:
    get:
      consumes:
      - application/json
      description: Получение турниров
      parameters:
      - description: tournamentID
        in: query
        name: tournamentID
        type: integer
      - description: league
        enum:
        - NHL
        - KHL
        in: query
        name: league
        type: string
      - description: status
        enum:
        - not_yet_started
        - started
        - finished
        - active
        in: query
        name: status
        type: string
      - description: type
        enum:
        - all
        - personal
        in: query
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_tournaments.Tournament'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение турниров
      tags:
      - tournament
  /user/delete:
    delete:
      consumes:
      - application/json
      description: Удаление профиля пользователя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Удаление профиля
      tags:
      - user
  /user/exists:
    get:
      consumes:
      - application/json
      description: 'Существует ли уже пользователь с таким email или nickname. Код
        200: пользователь с такими данными уже существует, код 404: пользователь с
        такими данными не найден.'
      parameters:
      - description: Email пользователя
        example: test@test.test
        in: query
        name: email
        type: string
      - description: Nickname пользователя
        example: Qwerty1
        in: query
        name: nickname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Существует ли пользователь с указанными параметрами
      tags:
      - user
  /user/info:
    get:
      consumes:
      - application/json
      description: Получение пользовательской информации по access токену
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.UserInfoModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение информации о пользователе
      tags:
      - user
  /user/password/change:
    patch:
      consumes:
      - application/json
      description: Смена пароля
      parameters:
      - description: Входные параметры
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Смена пароля
      tags:
      - user
  /user/password/forgot:
    post:
      consumes:
      - application/json
      description: Отправка письма с информацией о сбросе пароля
      parameters:
      - description: Входные параметры
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.EmailInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Забыли пароль
      tags:
      - user
  /user/password/reset:
    patch:
      consumes:
      - application/json
      description: Восстановление пароля
      parameters:
      - description: Входные параметры
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.ResetPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_api.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      summary: Восстановление пароля
      tags:
      - user
  /user/transactions:
    get:
      consumes:
      - application/json
      description: Получение истории транзакций пользователя по access токену
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Frozen-Fantasy_fantasy-backend_git_pkg_models_user.CoinTransactionsModel'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pkg_api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_api.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение истории транзакций пользователя
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
